<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Border BorderThickness="1" BorderBrush="#111111" CornerRadius="3">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border x:Name="OuterBorderContainer" Grid.Column="0" Background="{StaticResource comboBoxTextBoxBackGround}" BorderBrush="{StaticResource comboBoxBorder}" BorderThickness="1,1,0,1" CornerRadius="2,0,0,2">
                    <Border x:Name="InnerBorderContainer" Background="Transparent" BorderBrush="{StaticResource ButtonInnerBorder}" BorderThickness="0" CornerRadius="1,0,0,1">
                    </Border>
                </Border>
                <Border x:Name="OuterBorderArrow" Grid.Column="1" Background="{StaticResource comboBoxBackGround}" BorderBrush="{StaticResource comboBoxBorder}" BorderThickness="0,1,1,1" CornerRadius="0,2,2,0">
                    <Border x:Name="InnerBorderArrow" Background="Transparent" BorderBrush="{StaticResource ButtonInnerBorder}" BorderThickness="1,1,1,1" CornerRadius="0,1,1,0">
                    </Border>
                </Border>
                <Path x:Name="Arrow" Grid.Column="1"  Fill="{StaticResource ButtonForeground}" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="OuterBorderContainer" Property="Background" Value="{StaticResource comboBoxTextBoxOverBackGround}" />
                <Setter TargetName="OuterBorderContainer" Property="BorderBrush" Value="{StaticResource comboBoxBorder}" />
                <Setter TargetName="OuterBorderArrow" Property="Background" Value="{StaticResource comboBoxOverBackGround}" />
                <Setter TargetName="OuterBorderArrow" Property="BorderBrush" Value="{StaticResource comboBoxBorder}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource HoverButtonForeground}" />
                <Setter Property="Foreground" Value="{StaticResource HoverTextBoxForeground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="OuterBorderContainer" Property="Background" Value="{StaticResource DisabledTextBoxOuterBackground}" />
                <Setter TargetName="OuterBorderContainer" Property="BorderBrush" Value="{StaticResource DisabledButtonOuterBorder}" />
                <Setter TargetName="InnerBorderContainer" Property="Background" Value="{StaticResource DisabledTextBoxInnerBackground}" />
                <Setter TargetName="InnerBorderContainer" Property="BorderBrush" Value="{StaticResource DisabledButtonInnerBorder}" />
                <Setter TargetName="OuterBorderArrow" Property="Background" Value="{StaticResource DisabledButtonOuterBackground}" />
                <Setter TargetName="OuterBorderArrow" Property="BorderBrush" Value="{StaticResource DisabledButtonOuterBorder}" />
                <Setter TargetName="InnerBorderArrow" Property="Background" Value="{StaticResource DisabledButtonInnerBackground}" />
                <Setter TargetName="InnerBorderArrow" Property="BorderBrush" Value="{StaticResource DisabledButtonInnerBorder}" />
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource DisabledButtonForeground}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Foreground" Value="{StaticResource comboBoxForeground}"/>
        <Setter Property="FontFamily" Value="Verdana"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Padding" Value="4,4,0,4"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid >
                        <ToggleButton 
              Name="ToggleButton" 
              Template="{StaticResource ComboBoxToggleButton}" 
              Grid.Column="2" 
              Focusable="false"
              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
              ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
              Name="ContentSite"
              IsHitTestVisible="False" 
              Content="{TemplateBinding SelectionBoxItem}"
              ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
              Margin="10,7,23,7"
              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        <TextBox x:Name="PART_EditableTextBox"
              Style="{x:Null}" 
              Template="{StaticResource ComboBoxTextBox}" 
              HorizontalAlignment="Left" 
              VerticalAlignment="Center" 
              Margin="3,3,23,3"
              Focusable="True" 
              Background="Transparent"
              Visibility="Hidden"
              IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
              Name="Popup"
              Placement="Bottom"
              IsOpen="{TemplateBinding IsDropDownOpen}"
              AllowsTransparency="True" 
              Focusable="False"
              PopupAnimation="Slide">
                            <Grid 
                Name="DropDown"
                SnapsToDevicePixels="True"                
                MinWidth="{TemplateBinding ActualWidth}"
                MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                  x:Name="DropDownBorder"
                  Background="{StaticResource ComboBoxPopUpBackground}"
                  BorderThickness="1,1,1,1"
				  CornerRadius="3"
                  BorderBrush="{StaticResource ButtonOuterBorder}"/>
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <ItemsPresenter />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DisabledTextBoxForeground}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility"	Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="FontWeight" Value="Normal"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontFamily" Value="Arial"/>
        <Setter Property="Foreground" Value="{StaticResource ComboBoxItemForeground}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="OuterBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border x:Name="InnerBorder" BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter />
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Background" Value="{StaticResource HoverButtonOuterBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource HoverButtonOuterBorder}"/>
                            <Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource HoverButtonInnerBackground}"/>
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource HoverButtonInnerBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource HoverButtonForeground}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{StaticResource PressedButtonOuterBackground}"/>
                            <Setter Property="BorderBrush" Value="{StaticResource PressedButtonOuterBorder}"/>
                            <Setter Property="Background" TargetName="InnerBorder" Value="{StaticResource PressedButtonInnerBackground}"/>
                            <Setter Property="BorderBrush" TargetName="InnerBorder" Value="{StaticResource PressedButtonInnerBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource PressedButtonForeground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>